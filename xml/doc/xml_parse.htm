<HTML>
	<HEAD>
		<STYLE TYPE="text/css">
		<!--
			PRE.cjk { font-family: "DejaVu Sans", monospace }
			CODE.cjk { font-family: "DejaVu Sans", monospace }
			a:link { color: #0000FF; }
			a:visited { color: #0000FF; }
			a:hover { color: #0000FF; }
			a:active{ color: #0000FF; }
		-->
		</STYLE>
	</HEAD>
	
	<BODY BGCOLOR="#ffffff">
		
		<HR SIZE=1 NOSHADE>
		
		<H4>&nbsp;NAME</H4>
		
		<BLOCKQUOTE>
			xml_parse - Read the content of an XML tag or attribute.
		</BLOCKQUOTE>
		
		<H4>&nbsp;SYNOPSIS</H4>
		
		<PRE CLASS="western" STYLE="margin-left: 0.39in; margin-right: 0.39in"><CODE CLASS="western">#include "<A HREF="xml_h.htm">xml.h</A>"</CODE></PRE>
		
		<PRE CLASS="western" STYLE="margin-left: 0.39in; margin-right: 0.39in">int xml_parse(xml document, char *buffer, unsigned int size, const char *query, ...);</PRE>

		<H4>&nbsp;DESCRIPTION</H4>
		
		<BLOCKQUOTE>
			The <i>xml_parse()</i> function reads the content of a tag or attribute from the XML document present in an <b>xml</b> structure.
		</BLOCKQUOTE>
		
		<BLOCKQUOTE>
			The <i>document</i> argument specifies the <b>xml</b> structure to read from.
		</BLOCKQUOTE>
		
		<BLOCKQUOTE>
			The <i>buffer</i> argument specifies the location of a character buffer to place data read form the document into.
		</BLOCKQUOTE>
		
		<BLOCKQUOTE>
			The <i>size</i> argument specifies the size of the buffer pointed to by the <i>buffer</i> argument.
			<br>
			If <i>size</i> is not large enough to accomodate the contents of the tag or attribute read then 
			<i>xml_parse()</i> will fail with the XML_ERROR_BUFFER_OVERFLOW error. 
		</BLOCKQUOTE>
		
		<BLOCKQUOTE>
			The <i>query</i> argument specifies the XML tag contents or attribute to be read from the document.
			<BR>
			The format of the <i>query</i> argument is similar to the standard object and array syntax of C with the following exceptions:
			<BR>
			<DT STYLE="margin-left: 0.2in; margin-bottom: 0.2in">
				- Object indices are left empty, each instance of empty indices implies an integer argument after the <i>query</i> argument. 
				<BR>
				  Up to 256 indices may be referenced by <i>query</i>.
				<BR>
				- Attributes are indicated by an ampersand at the end of the object reference followed by the name of the attribute to be read.
			</DT>
			<P>
			Given the following XML document:
		</BLOCKQUOTE>
<BLOCKQUOTE>
<PRE>
&lt;tag&gt;
	&lt;innertag&gt;some content&lt;/innertag&gt;
	&lt;innertag attribute="some value"&gt;some other content&lt;/innertag&gt;
&lt;/tag&gt;
</PRE>
</BLOCKQUOTE>
		<BLOCKQUOTE>
			The following values of query and the extended arguments would yield the indicated results
		</BLOCKQUOTE>
<BLOCKQUOTE>
<PRE>
	<b><i>query</i>, <i>...</i>			Result copied to <i>buffer</i></b>
	"tag.innertag"			"some content"
	"tag.innertag[]", 1		"some other content"
	"tag.innertag[]&amp;attribute", 1	"some value"
	"tag.innertag[]", 0		"some content"
	"tag[].innertag[]", 0, 0	"some content"
	"tag[].innertag[]", 0, 1	"some other content"
</PRE>
</BLOCKQUOTE>

		<BLOCKQUOTE>
			Nonexistant tag names, attribute names or out of range indices will cause <i>xml_parse()</i> to fail with the XML_ERROR_TAG_NOT_FOUND error.
			<p>
			If a syntax error which would prevent further parsing is found in the XML document prior to finding the desired data <i>xml_parse()</i> will
			fail with the XML_ERROR_SYNTAX_ERROR error.
		</BLOCKQUOTE>
		
		<H4>&nbsp;RETURN VALUE</H4>
		
		<BLOCKQUOTE>
			Upon successful completion the function returns zero.
		</BLOCKQUOTE>
		
		<H4>&nbsp;ERRORS</H4>
		
		<BLOCKQUOTE>
			In case of an error one of the following values will be returned:
		</BLOCKQUOTE>
		
		<DL>
			<DL>
				<BLOCKQUOTE>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">[XML_ERROR_NULL_POINTER_ERROR]</DT>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">
						The <i>buffer</i> or <i>query</i> arguments are NULL.
					</DT>
				</BLOCKQUOTE>
				
				<BLOCKQUOTE>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">[XML_ERROR_INITIALIZATION_ERROR]</DT>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">
						The <b>xml</b> structure has not been initalized with the
						<A HREF="xml_create.htm">xml_create()</A>, <A HREF="xml_read.htm">xml_read()</A> or <A HREF="xml_import.htm">xml_import()</A> functions
						or the <i>query</i> argument is malformed.
					</DT>
				</BLOCKQUOTE>
				
				<BLOCKQUOTE>	
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">[XML_ERROR_MALLOC_ERROR]</DT>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">
						A call to malloc() has failed due to insufficient memory.
					</DT>
				</BLOCKQUOTE>
				
				<BLOCKQUOTE>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">[XML_ERROR_SYNTAX_ERROR]</DT>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">
						A syntax error was found when parsing the XML document.
					</DT>
				</BLOCKQUOTE>
				
				<BLOCKQUOTE>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">[XML_ERROR_TAG_NOT_FOUND]</DT>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">
						The tag or attribute indicated by the <i>query</i> argument was not found.
					</DT>
				</BLOCKQUOTE>
				
				<BLOCKQUOTE>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">[XML_ERROR_BUFFER_OVERFLOW]</DT>
					<DT STYLE="margin-right: 0.39in; margin-bottom: 0.2in">
						The size of the contents of the tag or attribute exceeds the value specified in
						the <i>size</i> argument.
					</DT>
				</BLOCKQUOTE>
			</DL>
	
		</DL>
		
		<H4>&nbsp;EXAMPLES</H4>
		
<DIV STYLE="margin-left: 0.39in; margin-bottom: 0.2in">
<PRE>
xml  document;
char buffer[128];

xml_read(&amp;document, "file.xml");
	
xml_parse(document, buffer, 128, "tag.innertag[]", 1);

printf("tag.innertag[1] = '%s'", buffer);
</PRE>
</DIV>
		
		<HR SIZE=1 NOSHADE>
		
		<CENTER>
			<BLOCKQUOTE>
				Copyright © 2010 Aaron Clovsky
			</BLOCKQUOTE>
		</CENTER>
		
	</BODY>
</HTML>